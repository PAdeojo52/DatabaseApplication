@page
@model DatabaseApplication.Pages.Registered.LoggedInIndexModel
@{
    Layout = "~/Pages/Shared/_LayoutLoggedIn.cshtml";
    ViewData["Title"] = "Welcome, Registered User!";
}

<<div class="dashboard-overview">
    <h1>Recent Activity</h1>
    <div class="dashboard-cards">
        <div class="card">
            <h2>@Model.TotalStockIn</h2>
            <p>Total Items in Stock</p>
        </div>
        <div class="card">
            <h2>@Model.TotalStockCheckedOut</h2>
            <p>Total Items Checked Out</p>
        </div>
        <div class="card">
            <h2>@Model.Categories.Count</h2>
            <p>Number of Catogories</p>
        </div>
        <div class="card">
            <h2>@Model.TotalInventoryCost</h2>
            <p>Total Inventory Cost</p>
        </div>
        <div class="card">
            <h2>4</h2>
            <p>To be decided</p>
        </div>
    </div>

    <div class="dashboard-sections">
        <div class="sales-chart">
            <h2>Total Stock Breakdown</h2>
            <canvas id="stockChart" width="400" height="400"></canvas>
        </div>
        @section Scripts {
            <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.min.js"></script>

            <script>
                // Fetch data from Razor Model
                const stockData = {
                    labels: ["Stock In", "Stock Checked Out"],
                    datasets: [{
                        label: 'Stock Breakdown',
                        data: [@Model.TotalStockIn, @Model.TotalStockCheckedOut],
                        backgroundColor: ['#4CAF50', '#FF5722'], // Colors for the chart
                        borderColor: ['#3E8E41', '#E64A19'], // Border colors
                        borderWidth: 1
                    }]
                };

                // Config for the chart
                const config = {
                    type: 'pie',
                    data: stockData,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.label + ': ' + tooltipItem.raw;
                                    }
                                }
                            }
                        }
                    }
                };

                // Render the chart
                const ctx = document.getElementById('stockChart').getContext('2d');
                new Chart(ctx, config);
            </script>

            <script>
                document.addEventListener('DOMContentLoaded', (event) => {
                    const categoryData = {
                        labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CategoryStockData.Keys.ToArray())),
                        datasets: [{
                            label: 'Number of Items',
                            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CategoryStockData.Values.ToArray())),
                            backgroundColor: [
                                '#4CAF50',
                                '#FF5722',
                                '#FFC107',
                                '#03A9F4',
                                '#9C27B0',
                                '#FFEB3B',
                                '#8BC34A',
                                '#009688',
                                '#9E9E9E',
                                '#795548'
                            ],
                            borderColor: [
                                '#388E3C',
                                '#D32F2F',
                                '#FFA000',
                                '#0288D1',
                                '#7B1FA2',
                                '#FBC02D',
                                '#689F38',
                                '#00796B',
                                '#616161',
                                '#5D4037'
                            ],
                            borderWidth: 1
                        }]
                    };

                    const ctx = document.getElementById('categoryChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar', // You can change this to 'pie' or 'doughnut' if you want different types of charts
                        data: categoryData,
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    position: 'top',
                                },
                                title: {
                                    display: true,
                                    text: 'Items by Category'
                                }
                            }
                        }
                    });
                });
            </script>
        }
        <div class="top-categories">
            <h2>Items by Catagory</h2>
            <canvas id="categoryChart" width="400" height="200"></canvas>



        </div>
    </div>
</div>